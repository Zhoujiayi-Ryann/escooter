<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.hello.mapper.NotificationMapper">
    
    <!-- 创建通知 -->
    <insert id="createNotification" parameterType="com.example.hello.entity.Notification" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO notifications (
            user_id, type, title, content, is_read, related_id, created_at
        ) VALUES (
            #{userId}, #{type}, #{title}, #{content}, #{isRead}, #{relatedId}, 
            CONVERT_TZ(#{createdAt}, @@session.time_zone, '+08:00')
        )
    </insert>
    
    <!-- 批量创建通知 -->
    <insert id="batchCreateNotifications" parameterType="java.util.List">
        INSERT INTO notifications (
            user_id, type, title, content, is_read, related_id, created_at
        ) VALUES 
        <foreach collection="notifications" item="notification" separator=",">
            (
                #{notification.userId}, #{notification.type}, #{notification.title}, 
                #{notification.content}, #{notification.isRead}, #{notification.relatedId}, 
                CONVERT_TZ(#{notification.createdAt}, @@session.time_zone, '+08:00')
            )
        </foreach>
    </insert>
    
    <!-- 获取用户的所有通知 -->
    <select id="getUserNotifications" resultType="com.example.hello.entity.Notification">
        SELECT 
            id, user_id as userId, type, title, content, is_read as isRead, related_id as relatedId,
            CONVERT_TZ(created_at, @@session.time_zone, '+08:00') as createdAt
        FROM notifications 
        WHERE user_id = #{userId}
        ORDER BY created_at DESC
    </select>
    
    <!-- 获取用户的未读通知 -->
    <select id="getUserUnreadNotifications" resultType="com.example.hello.entity.Notification">
        SELECT 
            id, user_id as userId, type, title, content, is_read as isRead, related_id as relatedId,
            CONVERT_TZ(created_at, @@session.time_zone, '+08:00') as createdAt
        FROM notifications 
        WHERE user_id = #{userId} AND is_read = false
        ORDER BY created_at DESC
    </select>
    
    <!-- 统计用户的未读通知数量 -->
    <select id="countUserUnreadNotifications" resultType="int">
        SELECT COUNT(*) 
        FROM notifications 
        WHERE user_id = #{userId} AND is_read = false
    </select>
    
    <!-- 将通知标记为已读 -->
    <update id="markAsRead">
        UPDATE notifications 
        SET is_read = true 
        WHERE id = #{notificationId} AND user_id = #{userId}
    </update>

    <!-- 将所有通知标记为已读 -->
    <update id="markAllAsRead">
        UPDATE notifications 
        SET is_read = true 
        WHERE user_id = #{userId} AND is_read = false
    </update>

    <!-- 删除通知 -->
    <delete id="deleteNotification">
        DELETE FROM notifications 
        WHERE id = #{notificationId} AND user_id = #{userId}
    </delete>
    
</mapper> 