/**
 * 日期时间工具类
 * 用于处理前端与后端之间的日期时间格式转换
 */
export const dateUtils = {
    /**
     * 格式化日期时间为后端期望的格式
     * 将ISO格式字符串的毫秒部分去掉（yyyy-MM-dd'T'HH:mm:ss.SSS'Z' -> yyyy-MM-dd'T'HH:mm:ss'Z'）
     *
     * @param dateTime 日期时间对象或字符串
     * @returns 格式化后的日期时间字符串
     */
    formatDateForBackend(dateTime: any): string {
        // 如果是Date对象，转换为ISO字符串
        const isoString = dateTime instanceof Date
            ? dateTime.toISOString()
            : String(dateTime);
        // 通过正则表达式去掉毫秒部分
        return isoString.replace(/\.\d{3}Z$/, 'Z');
    },
    /**
     * 格式化日期为指定格式
     *
     * @param date 日期对象
     * @param format 格式字符串，例如 "yyyy-MM-dd"
     * @returns 格式化后的日期字符串
     */
    formatDate(date: Date, format: string = 'yyyy-MM-dd'): string {
        const year = date.getFullYear();
        const month = (date.getMonth() + 1).toString(10).padStart(2, '0');
        const day = date.getDate().toString(10).padStart(2, '0');
        let result = format;
        result = result.replace('yyyy', year.toString(10));
        result = result.replace('MM', month);
        result = result.replace('dd', day);
        return result;
    },
    /**
     * 格式化时间为指定格式
     *
     * @param date 日期对象
     * @param format 格式字符串，例如 "HH:mm:ss"
     * @returns 格式化后的时间字符串
     */
    formatTime(date: Date, format: string = 'HH:mm:ss'): string {
        const hours = date.getHours().toString(10).padStart(2, '0');
        const minutes = date.getMinutes().toString(10).padStart(2, '0');
        const seconds = date.getSeconds().toString(10).padStart(2, '0');
        let result = format;
        result = result.replace('HH', hours);
        result = result.replace('mm', minutes);
        result = result.replace('ss', seconds);
        return result;
    },
    /**
     * 格式化日期时间为指定格式
     *
     * @param date 日期对象
     * @param format 格式字符串，例如 "yyyy-MM-dd HH:mm:ss"
     * @returns 格式化后的日期时间字符串
     */
    formatDateTime(date: Date, format: string = 'yyyy-MM-dd HH:mm:ss'): string {
        return this.formatDate(date, format.split(' ')[0]) + ' ' +
            this.formatTime(date, format.split(' ')[1]);
    }
} as UTSJSONObject;
