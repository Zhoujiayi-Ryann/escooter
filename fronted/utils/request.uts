// HTTP 请求工具类
const BASE_URL = 'https://aadujkrrrwxp.sealoshzh.site/api';

// 存储 token 的 key
const TOKEN_KEY = 'token';

// 定义接口返回类型
interface ApiResponse<T> {
    code: number;
    msg: string;
    data: T;
}

// 定义登录响应数据类型
interface LoginResponseData {
    user_id: number;
    username: string;
    token: string;
}

// 定义注册响应数据类型
interface RegisterResponseData {
    user_id: number;
    username: string;
    email: string;
}

// 获取存储的 token
export function getToken(): string {
    const token = uni.getStorageSync(TOKEN_KEY);
    return token || '';
}

// 设置 token
export function setToken(token: string) {
    uni.setStorageSync(TOKEN_KEY, token);
}

// 清除 token
export function removeToken() {
    uni.removeStorageSync(TOKEN_KEY);
}

// HTTP 请求封装
export function request<T>(options: {
    url: string,
    method?: 'GET' | 'POST' | 'PUT' | 'DELETE',
    data?: any,
    needToken?: boolean
}): Promise<ApiResponse<T>> {
    return new Promise((resolve, reject) => {
        const token = getToken();
        const header: any = {
            'Content-Type': 'application/json',
            'Accept': 'application/json'
        };
        
        // 如果需要 token 且 token 存在，则添加到请求头
        if (options.needToken && token) {
            header.token = token;
        }

        uni.request({
            url: BASE_URL + options.url,
            method: options.method || 'GET',
            data: options.data,
            header: header,
            withCredentials: true, // 允许发送 cookie
            success: (res: any) => {
                // 处理 401 未授权的情况
                if (res.statusCode === 401) {
                    // 清除 token
                    removeToken();
                    // 跳转到登录页
                    uni.redirectTo({
                        url: '/pages/login/login'
                    });
                    reject(new Error('Unauthorized'));
                    return;
                }
                resolve(res.data);
            },
            fail: (err: any) => {
                console.error('请求失败:', err);
                reject(err);
            }
        });
    });
}

// API 接口封装
export const api = {
    // 用户登录
    login(data: { username: string, password: string }): Promise<ApiResponse<LoginResponseData>> {
        return request<LoginResponseData>({
            url: '/users/login',
            method: 'POST',
            data: data
        });
    },

    // 用户注册
    register(data: { 
        username: string, 
        password: string, 
        email: string, 
        phone_number: string
    }): Promise<ApiResponse<RegisterResponseData>> {
        return request<RegisterResponseData>({
            url: '/users/register',
            method: 'POST',
            data: data
        });
    }
} as const; 