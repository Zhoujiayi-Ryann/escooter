<template>
  <view class="container">
	<view class="floating-btn close-btn" @click="navigateToHome">
      <van-icon name="close" class="close-icon" />
    </view>
    <view class="content">
      <view class="icon">
        <img src="/static/booking_su/icon.png" alt="icon" />
      </view>
      <h2>Booking placed successfully</h2>
      <p>Thanks for your Booking. <br />
	  Your Booking has been placed successfully.<br/>
		Please continue your Book.
	  </p>
    </view> 
    
    <view class="btn-content">
      <button class="see" @click="navigateToOrderDetails">
        See Details
      </button>
      <button class="back" @click="navigateToHome">
        Back Home
      </button>
    </view>
  </view>
</template>

<script>
export default {
  data() {
    return {
      orderId: null
    };
  },
  onLoad(query) {
    console.log('📦 booking_right received query:', query);
    this.orderId = query.orderId;

    // Debug info
    console.log('✅ Received orderId value:', this.orderId);
    console.log('✅ orderId type:', typeof this.orderId);
    
    // If orderId is a string, try converting it to a number
    if (typeof this.orderId === 'string') {
      const numId = Number(this.orderId);
      if (!isNaN(numId)) {
        console.log('✅ orderId converted to number:', numId);
      } else {
        console.warn('⚠️ orderId is not a valid number:', this.orderId);
      }
    }
  },
  methods: {
    navigateToHome() {
      uni.navigateTo({ url: '/pages/home/home' });
    },
    navigateToOrderDetails() {
      if (!this.orderId) {
        uni.showToast({ title: 'Order ID is missing', icon: 'none' });
        return;
      }

      console.log('🔀 Navigating to order_not_used, orderId =', this.orderId);

      // Convert to string to ensure correct URL encoding
      const orderId = String(this.orderId);

      // Use navigateTo instead of reLaunch to keep history
      uni.navigateTo({
        url: `/pages/order_not_used/order_not_used_home?orderId=${orderId}`,
        success: () => {
          console.log('✅ Navigation succeeded');
        },
        fail: (err) => {
          console.error('❌ Navigation failed:', err);
          // Fallback to redirectTo
          uni.redirectTo({
            url: `/pages/order_not_used/order_not_used_home?orderId=${orderId}`
          });
        }
      });
    }
  }
};
</script>

<style>

.container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  height: 100vh; 
  padding: 20px;
  text-align: center;
  background: linear-gradient(to bottom, #f0faff, #ffffff);
}

.close-btn {
  position: absolute;
  top: 80px;
  left: 30px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  z-index: 10; /* 确保它在最上层 */
}

/* 关闭图标样式 */
.close-icon {
  font-size: 90rpx;  /* 设置图标大小 */
  color:#7dafff;       /* 设置颜色 */
}

.floating-btn {
  position: fixed;
  top: 65px;
  left: 30px;
  z-index: 100;
  background-color: rgba(255, 255, 255, 0.8);
  border-radius: 50%;
  width: 50px;
  height: 50px;
  display: flex;
  justify-content: center;
  align-items: center;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

.floating-btn .van-icon {
  font-size: 30px;
  color: #007aff;
}
.content {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  flex: 1; 
  text-align: center;
}

.icon {
  margin: 20rpx 0;
}


h2 {
	color: #007aff;
  font-size: 60rpx;
  font-weight: bold;
  margin: 20rpx 30rpx;
}

p {
  font-size: 30rpx;
  color: #666;
  padding: 0 30rpx;
  margin: 0 10rpx;
  margin-top: 50rpx;
}


.btn-content {
  width: 100%;
  position: absolute;
  bottom: 50rpx;
  display: flex;
  flex-direction: column;
  align-items: center;
}


.back,
.see {
  width: 80%;
  margin: 10rpx 0;
  height: 90rpx;
  line-height: 90rpx;
  font-size: 35rpx;
  background: linear-gradient(to right, #82b1ff, #007aff);
  color: #fff;
  border-radius: 70rpx;
  transition: all 0.3s;
}


.see {
  background: #fff;
  color: #82b1ff;
  border: 1px solid #82b1ff;
}


.back:active,
.see:active {
  transform: scale(0.96);
}
</style>
