<template>
  <view class="container">

    <view class="mine-page">

      <!-- User Info -->
      <van-cell class="user-info" center>
        <template #icon>
          <van-image round width="60" height="60" :src="user.avatar" />
        </template>
        <template #title>
          <view>
            <view class="username">{{ user.name }}</view>
            <view class="userid">ID: {{ user.id }}</view>
          </view>
        </template>
      </van-cell>

      <!-- Membership Banner -->
      <van-notice-bar scrollable text="Save up to 200 CNY per month by becoming a member, click to learn more!" />
	  <!-- Mileage -->
	  <view class="mileage-card">
	    <van-row gutter="20">
	      <van-col span="12" class="mileage-item">
	        <van-icon name="clock-o" class="mileage-icon" />
	        
	        <view class="mileage-label">Usage Hours</view>
			<view class="mileage-value">{{ mileage.hours }}</view>
	      </van-col>
	      <van-col span="12" class="mileage-item">
	        <van-icon name="balance-o" class="mileage-icon" />
	        
	        <view class="mileage-label">Total Spent</view>
			<view class="mileage-value">￡{{ mileage.spent.toFixed(2) }}</view>
	      </van-col>
	    </van-row>
	  </view>
      

      <!-- Bottom Section -->
      <view class="page-section">
		  <!-- Order Section -->
		  <van-grid :column-num="4" border>
		    <van-grid-item icon="orders-o" text="All Orders" @click="navigateTo('orders')" />
		    <van-grid-item icon="card" text="My Card" @click="navigateTo('card')" />
		    <van-grid-item icon="service-o" text="Help" @click="navigateTo('help')" />
		    <van-grid-item icon="bell" text="Notifications" @click="navigateTo('notify')" />
		  </van-grid>



        <!-- Function List -->
        <van-cell-group class="function-group">
          <van-cell title="Add Card" is-link size="large" @click="goCard" />
          <van-cell title="Feedback" is-link size="large" @click="goFeedback" />
          <van-cell title="Edit Profile" is-link size="large" @click="gochange"/>
          <van-cell title="Log Out" is-link size="large" @click="handleLogout" />
        </van-cell-group>
		  

      </view>

      <!-- Bottom Tabbar -->
      <van-tabbar route fixed>
        <van-tabbar-item icon="home-o" to="/pages/home/home">Home</van-tabbar-item>
        <van-tabbar-item icon="user-o" to="/pages/settings/my_settings/my_settings" >Mine</van-tabbar-item>
      </van-tabbar>

    </view>

  </view>
</template>

<script>
import { userApi } from '../../../utils/api/user/index.uts';

export default {
  data() {
    return {
      user: {
        name: '游客',
        id: '0',
        avatar: '/static/settings/userp.jpg'
      },
      orderStatus: {
        unused: 1
      },
      mileage: {
        hours: 0,
        spent: 0
      }
    }
  },
  onLoad() {
    this.getUserInformation();
  },
  onShow() {
    // 每次页面显示时更新用户信息，确保数据最新
    this.getUserInformation();
  },
  methods: {
    getUserInformation() {
      // 使用userApi获取完整的用户信息
      const userInfo = userApi.getUserInfo();
      
      if (userInfo) {
        console.log('已加载完整用户信息:', userInfo);
        
        // 更新页面上的用户信息 - 使用正确的字段名称
        this.user.name = userInfo.username || '游客';
        this.user.id = (userInfo.user_id || userInfo.userId || 0).toString();
        
        // 更新使用时长和总花费 - 注意字段名称可能有多种格式
        const usageHours = userInfo.totalUsageHours || userInfo.total_usage_hours || 0;
        const spent = userInfo.totalSpent || userInfo.total_spent || 0;
        
        this.mileage.hours = parseFloat(usageHours).toFixed(1);
        this.mileage.spent = parseFloat(spent);
        
        console.log('更新后的里程信息:', {
          hours: this.mileage.hours,
          spent: this.mileage.spent
        });
      } else {
        // 用户未登录，显示默认信息
        this.user.name = '游客';
        this.user.id = '0';
        this.mileage.hours = 0;
        this.mileage.spent = 0;
        console.log('未找到用户信息，显示游客模式');
      }
    },
    handleLogout() {
      // 调用API退出登录
      userApi.logout();
      
      // 显示提示信息
      uni.showToast({
        title: '已退出登录',
        icon: 'success'
      });
      
      // 更新本地用户信息为游客状态
      this.user.name = '游客';
      this.user.id = '0';
      
      // 延迟后跳转到登录页面
      setTimeout(() => {
        uni.navigateTo({
          url: '/pages/login/login'
        });
      }, 1500);
    },
    goCard() {
      uni.navigateTo({
        url: '/pages/settings/card/card'
      });
    },
	navigateTo(page) {
	  const map = {
	    orders: '/pages/settings/orders/orders',
	    card: '/pages/cards/cards',
	    help: '/pages/help/help',
	    notify: '/pages/notification/notification'
	  };
	
	  if (map[page]) {
	    uni.navigateTo({ url: map[page] });
	  }
	},

	goFeedback() {
	  uni.navigateTo({
	    url: '/pages/feedback/feedback'
	  });
	},
	gochange() {
	  uni.navigateTo({
	    url: '/pages/settings/change/change'
	  });
	}
  }
  
}
</script>


<style scoped>

.mine-page {
  background: linear-gradient(
    to bottom,
    rgba(0, 123, 255, 0.2) 0%,   
    rgba(0, 123, 255, 0.1) 50%,  
    rgba(255, 255, 255, 0) 100%  
  );
  min-height: 100vh;
  padding: 20rpx;

  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  gap: 15rpx;
}

/* 用户信息 */
.user-info {
  margin-top: 100rpx;  
  border-radius: 24rpx;
  padding: 30rpx;
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.05);
  background: rgba(255,255,255,0.95) !important;
}

/* 用户文本 */
.username {
  font-size: 34rpx;
  font-weight: bold;
  color: #222;
  margin-left: 25rpx;
}
.userid {
  font-size: 26rpx;
  color: #777;
  margin-top: 6rpx;
  margin-left: 25rpx;
}

/* notice bar */
.van-notice-bar {
  margin-top: 10rpx;
  border-radius: 16rpx;
  height: 56rpx;
  font-size: 24rpx;
}

/* grid */
.van-grid {
  border-radius: 20rpx;
  overflow: hidden;  /* ✅ 裁剪圆角内的格子 */
  background: rgba(255,255,255,0.95);
  box-shadow: 0 4px 15px rgba(0,0,0,0.05);
}

.van-grid-item__content {
  padding: 35rpx 0;
}
.van-grid-item__icon {
  font-size: 44rpx !important;
}
.van-grid-item__text {
  font-size: 26rpx;
}

/* 下半部分 */
.page-section {
  margin-top: 20rpx;   /* ✅ 控制整体下移 */
  display: flex;
  flex-direction: column;
  gap: 45rpx;
}
.mileage-card {
  border-radius: 20rpx;
  padding: 30rpx 0;
  background: rgba(255,255,255,0.95);
  box-shadow: 0 4px 12px rgba(0,0,0,0.05);
  margin-top: 10rpx;
}

.mileage-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.mileage-icon {
  font-size: 50rpx;
  color: #00cc66;
  margin-bottom: 10rpx;
}

.mileage-value {
  font-size: 32rpx;
  font-weight: bold;
  color: #333;
}

.mileage-label {
  font-size: 24rpx;
  color: #777;

}


.function-group {
  border-radius: 18rpx !important;
  margin-top: 20rpx;
  background: rgba(255,255,255,0.95);
  box-shadow: 0 4px 15px rgba(0,0,0,0.05);
  padding-left: 0 !important;
  padding-right: 0 !important;
  overflow: hidden;
}

/* cell 内部文字、间距 */
.function-group .van-cell {
  font-size: 30rpx !important;
  color: #333 !important;
  margin-bottom: 30rpx;
}

/* cell 点击 */
.function-group .van-cell::after {
  border-bottom: 1px solid rgba(0,0,0,0.05);
}

/* tabbar */
.van-tabbar {
  box-shadow: 0 -2px 12px rgba(0,0,0,0.05);
  height: 100rpx;
}

.van-tabbar-item {
  font-size: 26rpx;
}
.van-tabbar-item__icon {
  font-size: 38rpx;
}
.van-tabbar-item--active {
  color: #007aff !important;
}

/* badge */
.van-badge {
  transform: translate(5rpx,-5rpx);
}
</style>