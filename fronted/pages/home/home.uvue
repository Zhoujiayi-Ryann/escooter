<template>
	<view>
		<view class="menu-button" @click="toggleSidebar">
			<van-icon name="bars" size="24px" color="#333" />
		</view>
		<view class="sidebar"
		:class="{ 'sidebar-open': showSidebar }">			
			<view class="user-info">
				<text class="greeting">Welcome, xxx!</text>
				<view class="user-stats">
					<view class="stat-item">
						<van-icon name="circle" color="#4cd964" size="24px" />
						<text class="stat-value">0</text>
						<text class="stat-label">km</text>
					</view>
					<view class="stat-item">
						<van-icon name="flag-o" color="#007aff" size="24px" />
						<text class="stat-value">0</text>
						<text class="stat-label">bills</text>
					</view>
				</view>
			</view>
			
			<view class="payment-section">
				<view class="payment-hint">
					<text>Add Payment To Start</text>
					<van-icon name="card" size="20px" />
				</view>
				<van-button type="primary" block round class="payment-button">Add Cards</van-button>
			</view>
			
			<view class="sidebar-menu">
				<view class="menu-item">
					<van-icon name="balance-o" size="22px" />
					<text>Wallet</text>
				</view>
				<view class="menu-item">
					<van-icon name="clock-o" size="22px" />
					<text>Records</text>
				</view>
				<view class="menu-item">
					<van-icon name="gift-o" size="22px" />
					<text>Free Points</text>
				</view>
				<view class="menu-item">
					<van-icon name="coupon-o" size="22px" />
					<text>Discount</text>
				</view>
				<view class="menu-item">
					<van-icon name="shield-o" size="22px" />
					<text>Safety Center</text>
				</view>
				<view class="menu-item">
					<van-icon name="question-o" size="22px" />
					<text>Help</text>
				</view>
				<view class="menu-item">
					<van-icon name="setting-o" size="22px" />
					<text>Settings</text>
				</view>
			</view>
		</view>
		<view v-if="showSidebar" class="sidebar-overlay" @click="toggleSidebar"></view>
		<van-floating-panel
		v-model:height="height"
		:anchors="anchors">
			<view class="instruction">
				<text>Rent E-scooters</text>
			</view>
			<van-cell-group class="list-container">
				<van-cell
				v-for="scooter in scooters" 
				:key="scooter.scooterId"
				:class="{'selected': selected === scooter.scooterId}"
				@click="selectEscooter(scooter.scooterId)">
					<template #title>
						<view class="cell-content">
							<text class="scooter-id">{{scooter.scooterId}}</text>
							<text class="battery">{{scooter.batteryLevel}}%</text>
						</view>
					</template>
					<template #label>
						<view v-if="selected === scooter.scooterId" class="detail">
							<text>Status: {{scooter.status}}</text>
							<text>Price: ￡{{scooter.price}}</text>
						</view>
					</template>
				</van-cell>
			</van-cell-group>
			<view class="next-button-area">
				<van-button
				round
				type="success"
				:disabled="selected === null"
				@click="nextStep">
				{{ selected === null ? 'Choose An E-scooter' : 'Next' }}
				</van-button>
			</view>
		</van-floating-panel>
		<map
		id="myMap"
		:longitude="mapCenter.longitude"
		:latitude="mapCenter.latitude"
		:style="{ width: windowWidth + 'px', height: windowHeight + 'px' }"
		:show-location="true"
		:markers="markers"
		:rotate="direction"
		:scale="scale">
		</map>
	</view>
</template>

<script>
import { api } from '../../utils/request';
export default {
	data() {
		return {
			showSidebar: false,
			longitude: 116.39742,
			latitude: 39.909,
			windowWidth: 0,
			windowHeight: 0,
			markers: [] as Array<{
				id: string;
				latitude: number;
				longitude: number;
				width: number;
				height: number;
				iconPath: string;
				callout: {
					content: string;
					display: 'ALWAYS' | 'BYCLICK';
				};
			}>,
			direction: 0,
			scale: 16,
			height: 60,
			anchors: [60, 0],
			selected: null,
			mapCenter: {
				longitude: 116.39742,
				latitude: 39.909
			},
			scooters: [] as Array<{
				scooterId: number;
				locationLat: number;
				locationLng: number;
				status: string;
				batteryLevel: number;
				price: number;
			}>
		};
	},
	mounted() {
		this.getLocation();
		this.startCompass();
		this.updateMarkers();
		this.fetchScooters();
	},
	onReady() {
		this.setHeight();
		this.setWidth();
		this.getAnchors();
	},
	methods: {
		getLocation() {
			uni.getLocation({
				type: 'gcj02',
				success: (res) => {
					this.longitude = res.longitude;
					this.latitude = res.latitude;
					this.mapCenter.longitude = res.longitude;
					this.mapCenter.latitude = res.latitude;
				},
				fail: (err) => {
					uni.showToast({
						title: 'Fail to locate.',
						icon: 'none',
						duration: 2000
					});
				}
			});
		},
		setHeight() {
			this.windowHeight = uni.getSystemInfoSync().windowHeight;
		},
		setWidth() {
			this.windowWidth = uni.getSystemInfoSync().windowWidth;
		},
		startCompass() {
			uni.onCompassChange((res) => {
				this.direction = res.direction;
			});
		},
		getAnchors() {
			this.anchors = [
				60,
				Math.round(0.7 * this.windowHeight)
			];
		},
		updateMarkers() {
			this.markers = this.scooters.map(scooter => ({
				id: scooter.scooterId.toString(),
				latitude: scooter.locationLat,
				longitude: scooter.locationLng,
				width: this.selected === scooter.scooterId ? 32 : 25,
				height: this.selected === scooter.scooterId ? 32 : 25,
				iconPath: '/static/order_details/maker.svg',
				callout: {
					content: `Scooter ${scooter.scooterId}`,
					display: this.selected === scooter.scooterId ? 'ALWAYS' : 'BYCLICK'
				}
			}));
		},
		selectEscooter(id) {
			if (this.selected === id) {
				this.selected = null;
				this.mapCenter.longitude = this.longitude;
				this.mapCenter.latitude = this.latitude;
			} else {
				this.selected = id;
				const selectedScooter = this.scooters.find(s => s.scooterId === id);
				if (selectedScooter) {
					this.mapCenter.longitude = selectedScooter.locationLng;
					this.mapCenter.latitude = selectedScooter.locationLat;
				}
			}
			this.updateMarkers();
		},
		nextStep() {
			uni.navigateTo({
				url: '/pages/order/confirm'
			});
		},
		fetchScooters() {
			api.getScooters().then(res => {
				if (res.code === 1) {
					this.scooters = res.data.map(scooter => {
						const parsed = JSON.parse(JSON.stringify(scooter));
						return {
							scooterId: parsed?.scooterId || 0,
							locationLat: parsed?.locationLat || 0,
							locationLng: parsed?.locationLng || 0,
							status: parsed?.status || 'unknown',
							batteryLevel: parsed?.batteryLevel || 0,
							price: parsed?.price || 0
						};
					});
					this.updateMarkers();
				} else {
					console.error('获取滑板车失败:', res.msg);
					uni.showToast({
						title: 'Fail to get escooters.',
						icon: 'none',
						duration: 2000
					});
				}
			}).catch(err => {
				console.error('请求异常:', err);
			});
		},
		toggleSidebar() {
			this.showSidebar = !this.showSidebar;
		}
	}
};
</script>

<style>
	.instruction {
		display: block;
		text-align: center;
		z-index: 1;
		padding: 5px;
		position: fixed;
		top: 25px;
		width: 100%;
		background-color: #ffffff;
	}
	.list-container {
		margin-top: 35px;
		margin-bottom: 55px;
	}
	.next-button-area {
		background-color: #ffffff;
		position: fixed;
		width: 100%;
		padding: 5px;
		bottom: 0;
	}
	.cell-content {
		display: flex;
		justify-content: space-between;
		align-items: center;
	}
	.scooter-id {
		font-size: 16px;
		font-weight: bold;
	}
	.battery {
		color: #666;
	}
	.selected {
		border: 2px solid #007aff !important;
		border-radius: 8px;
	}
	.van-cell {
		border: 1px solid #eee;
		border-radius: 8px;
		width: 95%;
		margin: auto;
	}
	.detail {
		display: flex;
		flex-direction: column;
		font-size: 14px;
		color: #666;
		padding: 8px 0;
	}
	.menu-button {
		position: fixed;
		top: 30px;
		left: 30px;
		z-index: 100;
		background-color: rgba(255, 255, 255, 0.8);
		border-radius: 50%;
		width: 40px;
		height: 40px;
		display: flex;
		justify-content: center;
		align-items: center;
		box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
	}
	.sidebar {
		position: fixed;
		top: 0;
		left: -90%;
		width: 80%;
		height: 100%;
		background-color: white;
		z-index: 1000;
		transition: left 0.3s ease;
		display: flex;
		flex-direction: column;
	}
	.sidebar-open {
		left: 0;
	}
	.sidebar-overlay {
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background-color: rgba(0, 0, 0, 0.5);
		z-index: 999;
	}
	.sidebar-header {
		padding: 15px 20px;
		border-bottom: 1px solid #f5f5f5;
	}
	.sidebar-title {
		font-size: 18px;
		font-weight: bold;
	}
	.user-info {
		padding: 15px 20px;
		border-bottom: 1px solid #f5f5f5;
	}
	.greeting {
		font-size: 20px;
		font-weight: bold;
		margin-bottom: 15px;
		display: block;
	}
	.user-stats {
		display: flex;
		flex-direction: row;
		justify-content: center;
		gap: 100px;
	}
	.stat-item {
		display: flex;
		flex-direction: column;
		align-items: center;
	}
	.stat-value {
		font-size: 18px;
		font-weight: bold;
		margin: 5px 0;
	}
	.stat-label {
		font-size: 12px;
		color: #999;
	}
	.payment-section {
		padding: 15px 20px;
		background-color: #f0f9ff;
		border-bottom: 1px solid #f5f5f5;
	}
	.payment-hint {
		display: flex;
		flex-direction: row;
		justify-content: center;
		gap: 20px;
		align-items: center;
		margin-bottom: 15px;
	}
	.payment-button {
		width: 100%;
	}
	.sidebar-menu {
		flex: 1;
		padding: 10px 0;
		overflow-y: auto;
	}
	.menu-item {
		padding: 10px 20px;
		display: flex;
		flex-direction: row;
		align-items: center;
		gap: 15px;
	}
	.version-info {
		font-size: 12px;
		color: #999;
	}
</style> 