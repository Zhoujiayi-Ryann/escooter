<template>
	<view class="container">
		<view class="header">
		  <view class="back-btn" @click="handleBack">
		    <van-icon name="arrow-left" class="back-icon" />
		  </view>
		  <text class="header-title">Help</text>
		</view>
		<text class="page-title">Usual Questions</text>
		<view class="help-list">
			<view class="help-item" @click="toggleExpand('start')">
				<view class="item-left">
					<van-icon name="question-o" size="20px" color="#007AFF" />
					<text class="help-text">How to rent an e-scooter?</text>
				</view>
				<van-icon :name="expanded.start ? 'arrow-up' : 'arrow'" size="16px" color="#999" />
			</view>
			<view class="expand-wrapper" :class="{ 'expanded': expanded.start }">
				<view class="expand-content">
					<text class="solution-text">
					1. Select the time and the period you would like to rent an e-scooter and click next button\n
					2. Choose an e-scooter from the list. You can see information about available e-scooters on the list and map\n
					3. Click next button to confirm the renting details\n
					4. Finish the payment and rent successfully
					</text>
				</view>
			</view>
			<view class="divider"></view>
			<view class="help-item" @click="toggleExpand('unlock')">
				<view class="item-left">
					<van-icon name="warning-o" size="20px" color="#FF9500" />
					<text class="help-text">How to expand the period?</text>
				</view>
				<van-icon :name="expanded.unlock ? 'arrow-up' : 'arrow'" size="16px" color="#999" />
			</view>
			<view class="expand-wrapper" :class="{ 'expanded': expanded.unlock }">
				<view class="expand-content">
					<text class="solution-text">
					1. Go to the order list\n
					2. Find the order you want to expand\n
					3. Click the "expand" button.
					</text>
				</view>
			</view>
			<view class="divider"></view>
			<view class="help-item" @click="toggleExpand('broken')">
				<view class="item-left">
					<van-icon name="info-o" size="20px" color="#FF3B30" />
					<text class="help-text">How does it charge?</text>
				</view>
				<van-icon :name="expanded.broken ? 'arrow-up' : 'arrow'" size="16px" color="#999" />
			</view>
			<view class="expand-wrapper" :class="{ 'expanded': expanded.broken }">
				<view class="expand-content">
					<text class="solution-text">
					The e-scooters' prices for each hour are shown in the list on home page.\n
					The total cost will be it multiplys the time used.
					</text>
				</view>
			</view>
			<view class="divider"></view>
			<view class="help-item" @click="toggleExpand('payment')">
				<view class="item-left">
					<van-icon name="info-o" size="20px" color="#FF3B30" />
					<text class="help-text">How to pay the bill?</text>
				</view>
				<van-icon :name="expanded.broken ? 'arrow-up' : 'arrow'" size="16px" color="#999" />
			</view>
			<view class="expand-wrapper" :class="{ 'expanded': expanded.payment }">
				<view class="expand-content">
					<text class="solution-text">
					You can follow the steps when reserving e-scooters and just select a card to pay.\n
					If you do not pay when reserving, there will be announcements on home page and you can just click them, 
					or go to the order list page to finish the payment.
					</text>
				</view>
			</view>
			<view class="divider"></view>
			<view class="help-item" @click="navigateToDetail('feedback')">
				<view class="item-left">
					<van-icon name="comment-o" size="20px" color="#34C759" />
					<text class="help-text">Give feedback</text>
				</view>
				<van-icon name="arrow" size="16px" color="#999" />
			</view>
		</view>
	</view>
</template>

<script>
	export default {
		data() {
			return {
				expanded: {
					start: false,
					unlock: false,
					broken: false,
					payment: false
				}
			}
		},
		methods: {
			toggleExpand(type) {
				this.expanded[type] = !this.expanded[type];
			},
			navigateToDetail(type) {
				const typeMapping = {
					'feedback': '/pages/feedback/feedback'
				};
				
				if (typeMapping[type]) {
					uni.navigateTo({
						url: typeMapping[type]
					});
				}
			},
			handleBack() {
			  const pages = getCurrentPages();
			  if (pages.length > 1) {
			    uni.navigateBack();
			  } else {
			    uni.reLaunch({ url: '/pages/settings/my_settings/my_settings' });
			  }
			}
		}
	}
</script>

<style>
.container {
	flex: 1;
	background: linear-gradient(to bottom, #e0f0ff, #ffffff);
	min-height: 100vh;
	padding: 20px;
}

.page-title {
	font-size: 24px;
	font-weight: bold;
	color: #333;
	margin-bottom: 20px;
	display: block;
}

.help-list {
	background-color: #fff;
	border-radius: 12px;
	overflow: hidden;
	box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
}

.help-item {
	display: flex;
	flex-direction: row;
	justify-content: space-between;
	align-items: center;
	padding: 16px 20px;
	background-color: #fff;
	transition: background-color 0.2s;
}

.help-item:active {
	background-color: #f5f5f5;
}

.item-left {
	display: flex;
	flex-direction: row;
	align-items: center;
	gap: 12px;
}

.help-text {
	font-size: 16px;
	color: #333;
	font-weight: 500;
}

.divider {
	height: 1px;
	background-color: #f0f0f0;
	margin: 0 20px;
}

.expand-wrapper {
	max-height: 0;
	overflow: hidden;
	transition: max-height 0.3s ease-out;
}

.expand-wrapper.expanded {
	max-height: 200px; /* 根据实际内容调整这个值 */
}

.expand-content {
	padding: 15px 20px;
	background-color: #f8f8f8;
	border-top: 1px solid #f0f0f0;
	transform: translateY(-100%);
	transition: transform 0.3s ease-out;
}

.expand-wrapper.expanded .expand-content {
	transform: translateY(0);
}

.solution-text {
	font-size: 14px;
	color: #666;
	line-height: 1.6;
	white-space: pre-line;
}

.back-btn {
	position: absolute;
	top: 25rpx;
	left: 30rpx;
	display: flex;
	align-items: center;
	justify-content: center;
	cursor: pointer;
	z-index: 10;
	background-color: #f4f8ff;
	border-radius: 25rpx;
	width: 80rpx;
	height: 80rpx;
}
	
.back-icon {
    font-size: 55rpx;
	color: #0084ff;
}
	
.header-title {
	font-size: 40rpx;
	font-weight: bold;
	color: #007aff;
	text-align: center;
}

.header {
	background-color: #ffffff;
	padding: 40rpx 0;
	text-align: center;
	border-radius: 20rpx;
	box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
	position: relative;
	margin-bottom: 30rpx;
}
</style>
